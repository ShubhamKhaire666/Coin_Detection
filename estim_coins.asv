
function [coins] = estim_coins(measurement,bias,dark,flat)
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here

imCal=intCalibration(measurement,bias,dark,flat);

% Image cropping
imIll=illumination_normalization(imCal);

% Geometric Calibration

[hpx2mm, vpx2mm]=geoCalibration(imIll);
geoCal=imresize(imCal,[hpx2mm, vpx2mm]);

%
imgray=rgb2gray(geoCal);

level=graythresh(imgray);

bw=imbinarize(imgray,'adaptive','Sensitivity',level,'ForegroundPolarity','dark');

bw=imcomplement(bw);

se=strel('disk',10,0);

bw=imclose(bw,se);


Rmin = 15;
Rmax = 30;
  
% Find all the bright circles in the image

[centersBright, radiiBright] = imfindcircles(bw,[Rmin Rmax], ...
                                        'ObjectPolarity','bright','Sensitivity',0.90, 'EdgeThreshold',level);

                                    
% Radii calibration pixel to mm, here radiiCal contains all the calibrated
% radii

% radiiCal=round(25.4/300,1)*radiiBright;


% coinTrue is an array containing true measurement for each of the 6 coins
% in millimeter.
% The order is 5c, 10c, 20c, 50c, 1e, 2e

coinTrue=[21.25,18.95,22.25,24.25,23.25,25.75]';

% dist contains the pairwise distance between radiiCal & coinTrue. 
% id contains the index of the shortest distance. pdist2 (matlab)

[dist,id]=pdist2(coinTrue,radiiBright, 'euclidean','Smallest',1);

% [~,id]=min(dist);

% Create an array with 0s and size 6.We count the coins based on id
% array. The size of the id array corressponds to the number of coins
% detected on the image. For instance, if the output of id is [1,3,3,6],
% then this meaans 4 coins have been detected such that the algorithm
% estimates 1 (5c) coin, 2 (20c) coins and 1 (2e) coin. We are counting the
% number of occurence of an index in the index array id.


figure;
imshow(BW)
hold on
viscircles(centersBright,radiiBright);


coins=zeros(1,6);

for k=1:length(id)
   cc=id(k);
   coins(cc)=coins(cc)+1;
end

end

